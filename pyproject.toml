[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vichintarka"
version = "1.0.0"
description = "FastAPI application with PostgreSQL and Redis"
authors = [
    {name = "AaKaSh0507", email = "your.email@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

dependencies = [
    "fastapi>=0.118.1",
    "uvicorn>=0.37.0",
    "pydantic>=2.12.0",
    "pydantic-settings>=2.11.0",
    "sqlalchemy>=2.0.43",
    "asyncpg>=0.30.0",
    "redis>=5.2.0",
    "alembic>=1.16.5",
    "python-dotenv>=1.1.1",
    "python-multipart>=0.0.20",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=4.0.1",
    "black>=25.9.0",
    "isort>=6.1.0",
    "flake8>=7.1.1",
    "mypy>=1.13.0",
    "bandit>=1.8.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "httpx>=0.28.1",
]

[project.urls]
Homepage = "https://github.com/AaKaSh0507/Vichintarka"
Repository = "https://github.com/AaKaSh0507/Vichintarka"
Issues = "https://github.com/AaKaSh0507/Vichintarka/issues"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true
known_first_party = ["app", "tests"]
known_third_party = ["fastapi", "pydantic", "sqlalchemy", "asyncpg", "redis", "alembic"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "asyncpg.*",
    "redis.*",
    "alembic.*",
    "sqlalchemy.*",
    "uvicorn.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]

# Flake8 configuration is in setup.cfg as flake8 doesn't support pyproject.toml yet
